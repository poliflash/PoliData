{"version":3,"sources":["components/Navbar/index.js","components/formularios/JsonForm.js","components/LoadingSpinner/index.js","components/hooks/useFetchPost.js","components/formularios/reducer.js","components/formularios/actionTypes.js","components/formularios/index.js","components/formularios/actions.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","styledAppBar","backgroundColor","logo","maxWidth","Navbar","classes","AppBar","className","Toolbar","src","alt","errorMessageStyles","styledWarning","props","color","display","visible","jsonFormStyles","styledRadioGroup","flexDirection","styledTextField","margin","loadingContainer","justifyContent","alignItems","minHeight","ErrorMessage","JsonForm","data","error","setFormAnswer","formError","handleChange","event","target","value","length","map","pregunta","indexP","key","idpregunta","FormLabel","component","RadioGroup","defaultValue","idrespuesta","respuesta","onChange","respuestas","FormControlLabel","control","Radio","label","includes","theme","root","marginLeft","spacing","LoadingSpinner","CircularProgress","size","useFetchPost","url","message","useState","dataPost","setDataPost","isLoadingPost","setIsLoadingPost","isErrorPost","setIsErrorPost","useEffect","a","async","config","method","headers","Accept","body","JSON","stringify","fetch","response","json","postData","initialState","formularios","qtyFormularios","isOpenDialog","formCompleted","formSubmitted","reducer","state","action","type","payload","index","findIndex","v","id","split","indexPregunta","idRespuesta","preguntas","errors","formularioIndex","forEach","Number","push","isEmpty","formsContainer","height","Formulario","title","isError","dispatch","open","setOpen","handleClose","Button","variant","onClick","Dialog","fullWidth","onClose","aria-labelledby","DialogTitle","encabezado","DialogContent","dividers","FormControl","val","setAnswer","DialogActions","submitForm","Formularios","useReducer","cedula","URL","window","location","href","searchParams","get","isLoading","formulario","mensaje","idformulario","App","CssBaseline","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.003be68f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  styledAppBar: {\r\n    backgroundColor: \"#0070c0\"\r\n  },\r\n  logo: {\r\n    maxWidth: 60\r\n  }\r\n});\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={classes.styledAppBar}>\r\n      <Toolbar>\r\n        <img src=\"logo.png\" alt=\"logo\" className={classes.logo} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst errorMessageStyles = makeStyles({\r\n  styledWarning: props => ({\r\n    color: \"#f44336\",\r\n    display: props.visible ? \"block\" : \"none\"\r\n  })\r\n});\r\n\r\nconst jsonFormStyles = makeStyles({\r\n  styledRadioGroup: {\r\n    flexDirection: \"row !important\"\r\n  },\r\n  styledTextField: {\r\n    margin: \"10px 0 20px !important\"\r\n  },\r\n  loadingContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"65vh\"\r\n  }\r\n});\r\n\r\nconst ErrorMessage = props => {\r\n  const classes = errorMessageStyles(props);\r\n  return (\r\n    <div className={classes.styledWarning}>Debe seleccionar una opci√≥n</div>\r\n  );\r\n};\r\n\r\nconst JsonForm = ({\r\n  data,\r\n  error,\r\n  setFormAnswer,\r\n  // setCommentAnswer,\r\n  formError\r\n}) => {\r\n  const classes = jsonFormStyles();\r\n\r\n  const handleChange = event => {\r\n    setFormAnswer(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!error && data.length ? (\r\n        data.map((pregunta, indexP) => (\r\n          <div key={pregunta.idpregunta}>\r\n            <FormLabel component=\"legend\">{pregunta.pregunta}</FormLabel>\r\n            <RadioGroup\r\n              className={classes.styledRadioGroup}\r\n              defaultValue={`${indexP}-${pregunta.idrespuesta}-${pregunta.respuesta}`}\r\n              onChange={handleChange}>\r\n              {pregunta.respuestas.length &&\r\n                pregunta.respuestas.map(respuesta => (\r\n                  <FormControlLabel\r\n                    key={respuesta.idrespuesta}\r\n                    value={`${indexP}-${respuesta.idrespuesta}-${respuesta.respuesta}`}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={respuesta.respuesta}\r\n                  />\r\n                ))}\r\n            </RadioGroup>\r\n            <ErrorMessage\r\n              visible={formError && formError.includes(pregunta.idpregunta)}\r\n            />\r\n            {/* <TextField\r\n              className={classes.styledTextField}\r\n              fullWidth\r\n              label=\"Comentario\"\r\n              multiline\r\n              rows=\"4\"\r\n              onChange={setCommentAnswer(indexP)}\r\n              defaultValue={\r\n                pregunta.idrespuesta !== 0 &&\r\n                pregunta.comentario !== `Falta Pregunta ${indexP + 1}`\r\n                  ? pregunta.comentario\r\n                  : \"\"\r\n              }\r\n              variant=\"outlined\"\r\n            /> */}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <h2>Disculpe, ha ocurrido un error</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JsonForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst LoadingSpinner = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={60} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner; ","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetchPost = (url, message) => {\r\n  const [dataPost, setDataPost] = useState();\r\n  const [isLoadingPost, setIsLoadingPost] = useState(false);\r\n  const [isErrorPost, setIsErrorPost] = useState(false);\r\n  const postData = async (url, message) => {\r\n    setIsErrorPost(false);\r\n    setIsLoadingPost(true);\r\n    try {\r\n      const config = {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(message)\r\n      };\r\n\r\n      const response = await fetch(url, config);\r\n      const data = await response.json();\r\n      setDataPost(data);\r\n      setIsErrorPost(false);\r\n      setIsLoadingPost(false);\r\n    } catch (error) {\r\n      setIsErrorPost(true);\r\n      setIsLoadingPost(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    postData(url, message);\r\n    setIsErrorPost(false);\r\n    setIsLoadingPost(false);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [url]);\r\n\r\n  return { dataPost, isLoadingPost, isErrorPost };\r\n};\r\n","import isEmpty from \"lodash/isEmpty\";\r\nimport {\r\n  SET_JSON,\r\n  SET_ANSWER,\r\n  // SET_COMMENT,\r\n  SUBMIT_FORM,\r\n  SET_IS_OPEN_DIALOG\r\n} from \"./actionTypes\";\r\n\r\nexport const initialState = {\r\n  formularios: [],\r\n  qtyFormularios: 0,\r\n  error: {},\r\n  isOpenDialog: false,\r\n  formCompleted: false,\r\n  formSubmitted: false\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  const formularios = state.formularios;\r\n  switch (action.type) {\r\n    case SET_IS_OPEN_DIALOG:\r\n      return { ...state, isOpenDialog: action.payload, error: [] };\r\n    case SET_JSON:\r\n      return {\r\n        ...state,\r\n        formularios: action.payload,\r\n        qtyFormularios: action.payload.length\r\n      };\r\n    case SET_ANSWER:\r\n      const index = formularios.findIndex(v => v.id === action.id);\r\n      const payload = action.payload.split(\"-\");\r\n      const indexPregunta = payload[0];\r\n      const idRespuesta = payload[1];\r\n      const respuesta = payload[2];\r\n\r\n      formularios[index].preguntas[indexPregunta][\"idrespuesta\"] = idRespuesta;\r\n      formularios[index].preguntas[indexPregunta][\"respuesta\"] = respuesta;\r\n\r\n      return { ...state, formularios: formularios };\r\n    // case SET_COMMENT:\r\n    //   formulario[action.payload][\"comentario\"] = action.event;\r\n    //   return { ...state, formulario: formulario };\r\n    case SUBMIT_FORM:\r\n      let errors = state.error;\r\n      const id = action.id;\r\n      const formularioIndex = formularios.findIndex(v => v.id === action.id);\r\n\r\n      formularios[formularioIndex].preguntas.forEach(pregunta => {\r\n        if (Number(pregunta.idrespuesta) === 0) {\r\n          if (errors[id] && !errors[id].includes(pregunta.idpregunta)) {\r\n            errors[id].push(pregunta.idpregunta);\r\n          } else if (!errors[id]) {\r\n            errors[id] = [pregunta.idpregunta];\r\n          }\r\n        } else {\r\n          errors = {};\r\n        }\r\n      });\r\n\r\n      if (!isEmpty(errors)) {\r\n        return { ...state, error: errors };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        error: errors,\r\n        isOpenDialog: false,\r\n        formCompleted: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_JSON = \"SET_JSON\";\nexport const SET_ANSWER = \"SET_ANSWER\";\nexport const SET_COMMENT = \"SET_COMMENT\";\nexport const SUBMIT_FORM = \"SUBMIT_FORM\";\nexport const SET_IS_OPEN_DIALOG = \"SET_IS_OPEN_DIALOG\";","import React, { useEffect, useState, useReducer } from \"react\";\r\nimport JsonForm from \"./JsonForm\";\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\n// import { useFetch } from \"../hooks/useFetch\";\r\nimport { useFetchPost } from \"../hooks/useFetchPost\";\r\nimport {\r\n  setJson,\r\n  setAnswer,\r\n  // setComment,\r\n  submitForm\r\n  // setIsOpenDialog\r\n} from \"./actions\";\r\nimport { initialState, reducer } from \"./reducer\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\n\r\nconst useStyles = makeStyles({\r\n  formsContainer: {\r\n    height: \"90vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\"\r\n  }\r\n});\r\n\r\nconst Formulario = ({ id, data, title, message, state, isError, dispatch }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setFormAnswer = val => {\r\n    dispatch(setAnswer(id, val));\r\n  };\r\n\r\n  // const setCommentAnswer = e => {\r\n  //   dispatch(setComment(id, e.target.value));\r\n  // };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(submitForm(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {title}\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{message.encabezado}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <FormControl fullWidth component=\"fieldset\">\r\n            <JsonForm\r\n              error={isError}\r\n              data={data && data}\r\n              formError={state.error[id] && state.error[id]}\r\n              setFormAnswer={setFormAnswer}\r\n              // setCommentAnswer={setCommentAnswer}\r\n            />\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Enviar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Formularios = () => {\r\n  const classes = useStyles();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const url =\r\n    \"https://f2020.azurewebsites.net/api/FaroFormulariosPersona?code=nbjfp6Cn8Mx3/WPr3DCwMXV8EZbfw2CB8UIMOTyfW8TYtlBSsbXGqw==\";\r\n\r\n  const href = new URL(window.location.href);\r\n  const cedula = href.searchParams.get(\"cedula\");\r\n\r\n  const {\r\n    dataPost: data,\r\n    isLoadingPost: isLoading,\r\n    isErrorPost: isError\r\n  } = useFetchPost(url, {\r\n    id: {\r\n      cedula: cedula\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    !isLoading && data && dispatch(setJson(data));\r\n  }, [data, isLoading]);\r\n\r\n  return (\r\n    <div className={classes.formsContainer}>\r\n      {data && !isLoading ? (\r\n        data.map(formulario => (\r\n          <Formulario\r\n            key={formulario.id}\r\n            state={state}\r\n            isError={isError}\r\n            id={formulario.id}\r\n            dispatch={dispatch}\r\n            data={formulario.preguntas}\r\n            message={formulario.mensaje}\r\n            title={formulario.idformulario}\r\n          />\r\n        ))\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Formularios;\r\n","import {\r\n  SET_JSON,\r\n  SET_ANSWER,\r\n  SET_COMMENT,\r\n  SUBMIT_FORM,\r\n  SET_IS_OPEN_DIALOG\r\n} from \"./actionTypes\";\r\n\r\nexport const setJson = payload => ({\r\n  payload,\r\n  type: SET_JSON\r\n});\r\n\r\nexport const setAnswer = (id, payload) => ({\r\n  id,\r\n  payload,\r\n  type: SET_ANSWER\r\n});\r\n\r\nexport const setComment = (payload, event) => ({\r\n  payload,\r\n  event,\r\n  type: SET_COMMENT\r\n});\r\n\r\nexport const submitForm = id => ({\r\n  id: id,\r\n  type: SUBMIT_FORM\r\n});\r\n\r\nexport const setIsOpenDialog = payload => ({\r\n  payload,\r\n  type: SET_IS_OPEN_DIALOG\r\n});\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Formularios from \"./components/formularios\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Navbar />\n      <Formularios />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}