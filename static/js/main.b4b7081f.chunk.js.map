{"version":3,"sources":["components/Navbar/index.js","components/formularios/JsonForm.js","components/LoadingSpinner/index.js","components/hooks/useFetchPost.js","components/formularios/reducer.js","components/formularios/actionTypes.js","components/formularios/index.js","components/formularios/actions.js","components/hooks/useFetch.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","styledAppBar","backgroundColor","styledLogo","maxWidth","styledSpanName","marginLeft","fontSize","fontWeight","Navbar","data","isLoading","isError","classes","AppBar","className","Toolbar","src","alt","apellido1","nombre1","errorMessageStyles","styledWarning","props","color","display","visible","jsonFormStyles","styledRadioContainer","marginBottom","styledRadioGroup","flexDirection","styledTextField","margin","loadingContainer","justifyContent","alignItems","minHeight","ErrorMessage","idformulario","JsonForm","error","setFormAnswer","setInputDirecciones","getIndexOf","formError","handleInputDirecciones","indexPregunta","idRespuesta","respuesta","event","target","value","handleChange","length","map","pregunta","indexP","key","idpregunta","respuestas","Grid","idrespuesta","container","direction","justify","spacing","style","width","item","xs","sm","md","TextField","required","label","onChange","defaultValue","texto","variant","includes","FormLabel","component","RadioGroup","FormControlLabel","control","Radio","theme","root","LoadingSpinner","CircularProgress","size","useFetchPost","url","message","useState","dataPost","setDataPost","isLoadingPost","setIsLoadingPost","isErrorPost","setIsErrorPost","useEffect","a","async","config","method","headers","Accept","body","JSON","stringify","fetch","response","json","postData","initialState","formularios","qtyFormularios","reducer","state","action","index","payload","type","findIndex","v","id","split","preguntas","val","styledFormsContainer","marginTop","height","styledFormContainer","textAlign","Formulario","dataPersona","title","dispatch","open","setOpen","setFormError","handleClose","setDirecciones","convertRes","Correo","Celular","Twitter","res","dir","direcciones","forEach","direccion","submitForm","Button","onClick","Dialog","fullWidth","onClose","aria-labelledby","DialogTitle","encabezado","DialogContent","dividers","FormControl","setAnswer","DialogActions","errors","push","Number","Formularios","cedula","useReducer","formulario","lg","mensaje","useFetch","setData","setIsLoading","setIsError","fetchData","App","URL","window","location","href","searchParams","get","CssBaseline","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4b7081f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  styledAppBar: {\r\n    backgroundColor: \"#0070c0\"\r\n  },\r\n  styledLogo: {\r\n    maxWidth: 64\r\n  },\r\n  styledSpanName: {\r\n    marginLeft: \"10px\",\r\n    fontSize: \".9rem\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nconst Navbar = ({ data, isLoading, isError }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={classes.styledAppBar}>\r\n      <Toolbar>\r\n        <img src=\"logo.png\" alt=\"logo\" className={classes.styledLogo} />\r\n        {!isError && !isLoading && data && (\r\n          <span className={classes.styledSpanName}>\r\n            {data.apellido1 ? `${data.nombre1} ${data.apellido1}` : data.nombre1}\r\n          </span>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst errorMessageStyles = makeStyles({\r\n  styledWarning: props => ({\r\n    color: \"#f44336\",\r\n    display: props.visible ? \"block\" : \"none\"\r\n  })\r\n});\r\n\r\nconst jsonFormStyles = makeStyles({\r\n  styledRadioContainer: {\r\n    marginBottom: \"10px\"\r\n  },\r\n  styledRadioGroup: {\r\n    flexDirection: \"row !important\"\r\n  },\r\n  styledTextField: {\r\n    margin: \"10px 0 20px !important\"\r\n  },\r\n  loadingContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"65vh\"\r\n  }\r\n});\r\n\r\nconst ErrorMessage = props => {\r\n  const classes = errorMessageStyles(props);\r\n  return (\r\n    <>\r\n      {props.idformulario === \"DIRECCIONES\" ? (\r\n        <div className={classes.styledWarning}>Debe completar este campo</div>\r\n      ) : (\r\n        <div className={classes.styledWarning}>Debe seleccionar una opción</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst JsonForm = ({\r\n  data,\r\n  error,\r\n  setFormAnswer,\r\n  setInputDirecciones,\r\n  idformulario,\r\n  getIndexOf,\r\n  formError\r\n}) => {\r\n  const classes = jsonFormStyles();\r\n\r\n  const handleInputDirecciones = (\r\n    indexPregunta,\r\n    idRespuesta,\r\n    respuesta\r\n  ) => event => {\r\n    setInputDirecciones(\r\n      event.target.value,\r\n      indexPregunta,\r\n      idRespuesta,\r\n      respuesta\r\n    );\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setFormAnswer(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!error && data.length ? (\r\n        data.map((pregunta, indexP) => (\r\n          <div key={pregunta.idpregunta}>\r\n            {idformulario === \"DIRECCIONES\" ? (\r\n              <>\r\n                {pregunta.respuestas.length &&\r\n                  pregunta.respuestas.map(respuesta => (\r\n                    <Grid\r\n                      key={respuesta.idrespuesta}\r\n                      container\r\n                      direction=\"column\"\r\n                      alignItems=\"center\"\r\n                      justify=\"center\"\r\n                      spacing={1}\r\n                      style={{ width: \"100%\" }}>\r\n                      <Grid\r\n                        style={{ width: \"100%\", marginBottom: \"15px\" }}\r\n                        item\r\n                        xs={12}\r\n                        sm={6}\r\n                        md={4}>\r\n                        <TextField\r\n                          style={{ width: \"100%\" }}\r\n                          required\r\n                          label={respuesta.respuesta}\r\n                          onChange={handleInputDirecciones(indexP)}\r\n                          defaultValue={\r\n                            respuesta.texto === \"\"\r\n                              ? getIndexOf(respuesta.respuesta) !== null\r\n                                ? getIndexOf(respuesta.respuesta).texto\r\n                                : \"\"\r\n                              : respuesta.texto\r\n                          }\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <ErrorMessage\r\n                          idformulario={idformulario}\r\n                          visible={formError.includes(pregunta.idpregunta)}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n              </>\r\n            ) : (\r\n              <div\r\n                className={classes.styledRadioContainer}\r\n                key={pregunta.idpregunta}>\r\n                <FormLabel component=\"legend\">{pregunta.pregunta}</FormLabel>\r\n                <RadioGroup\r\n                  className={classes.styledRadioGroup}\r\n                  defaultValue={`${indexP}-${pregunta.idrespuesta}-${pregunta.respuesta}`}\r\n                  onChange={handleChange}>\r\n                  {pregunta.respuestas.length &&\r\n                    pregunta.respuestas.map(respuesta => {\r\n                      return (\r\n                        <div key={respuesta.idrespuesta}>\r\n                          <FormControlLabel\r\n                            value={`${indexP}-${respuesta.idrespuesta}-${respuesta.respuesta}`}\r\n                            control={<Radio color=\"primary\" />}\r\n                            label={respuesta.respuesta}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </RadioGroup>\r\n                <ErrorMessage\r\n                  idformulario={idformulario}\r\n                  visible={formError.includes(pregunta.idpregunta)}\r\n                />\r\n              </div>\r\n            )}\r\n            {/* <TextField\r\n            className={classes.styledTextField}\r\n            fullWidth\r\n            label=\"Comentario\"\r\n            multiline\r\n            rows=\"4\"\r\n            onChange={setCommentAnswer(indexP)}\r\n            defaultValue={\r\n              pregunta.idrespuesta !== 0 &&\r\n              pregunta.comentario !== `Falta Pregunta ${indexP + 1}`\r\n                ? pregunta.comentario\r\n                : \"\"\r\n            }\r\n            variant=\"outlined\"\r\n          /> */}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <h2>Disculpe, ha ocurrido un error</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JsonForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst LoadingSpinner = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={60} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner; ","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetchPost = (url, message) => {\r\n  const [dataPost, setDataPost] = useState();\r\n  const [isLoadingPost, setIsLoadingPost] = useState(false);\r\n  const [isErrorPost, setIsErrorPost] = useState(false);\r\n  const postData = async (url, message) => {\r\n    setIsErrorPost(false);\r\n    setIsLoadingPost(true);\r\n    try {\r\n      const config = {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(message)\r\n      };\r\n\r\n      const response = await fetch(url, config);\r\n      const data = await response.json();\r\n      setDataPost(data);\r\n      setIsErrorPost(false);\r\n      setIsLoadingPost(false);\r\n    } catch (error) {\r\n      setIsErrorPost(true);\r\n      setIsLoadingPost(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    postData(url, message);\r\n    setIsErrorPost(false);\r\n    setIsLoadingPost(false);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [url]);\r\n\r\n  return { dataPost, isLoadingPost, isErrorPost };\r\n};\r\n","import { SET_JSON, SET_ANSWER, SET_DIRECCIONES } from \"./actionTypes\";\r\n\r\nexport const initialState = {\r\n  formularios: [],\r\n  qtyFormularios: 0\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  const formularios = state.formularios;\r\n  let index, payload, indexPregunta, idRespuesta, respuesta;\r\n  switch (action.type) {\r\n    case SET_JSON:\r\n      return {\r\n        ...state,\r\n        formularios: action.payload,\r\n        qtyFormularios: action.payload.length\r\n      };\r\n    case SET_ANSWER:\r\n      index = formularios.findIndex(v => v.id === action.id);\r\n      payload = action.payload.split(\"-\");\r\n      indexPregunta = payload[0];\r\n      idRespuesta = payload[1];\r\n      respuesta = payload[2];\r\n\r\n      formularios[index].preguntas[indexPregunta][\"idrespuesta\"] = idRespuesta;\r\n      formularios[index].preguntas[indexPregunta][\"respuesta\"] = respuesta;\r\n\r\n      return { ...state, formularios: formularios };\r\n    case SET_DIRECCIONES:\r\n      index = formularios.findIndex(v => v.id === action.id);\r\n      payload = action.payload.val;\r\n      indexPregunta = action.payload.indexPregunta;\r\n      respuesta = action.payload.val;\r\n\r\n      formularios[index].preguntas[\r\n        indexPregunta\r\n      ].respuestas[0].texto = respuesta;\r\n\r\n      return { ...state, formularios: formularios };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_JSON = \"SET_JSON\";\nexport const SET_ANSWER = \"SET_ANSWER\";\nexport const SET_DIRECCIONES = \"SET_DIRECCIONES\";","import React, { useEffect, useState, useReducer } from \"react\";\r\nimport JsonForm from \"./JsonForm\";\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\nimport { useFetchPost } from \"../hooks/useFetchPost\";\r\nimport { setJson, setAnswer, setDirecciones } from \"./actions\";\r\nimport { initialState, reducer } from \"./reducer\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  styledFormsContainer: {\r\n    marginTop: \"60px\",\r\n    height: \"calc(100vh - 60px)\"\r\n  },\r\n  styledFormContainer: {\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n\r\nconst Formulario = ({\r\n  id,\r\n  index,\r\n  data,\r\n  dataPersona,\r\n  title,\r\n  message,\r\n  state,\r\n  isError,\r\n  idformulario,\r\n  dispatch\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [formError, setFormError] = useState([]);\r\n  const [isLoadingPost, setIsLoadingPost] = useState(false);\r\n  const [isErrorPost, setIsErrorPost] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setInputDirecciones = (val, indexPregunta) => {\r\n    dispatch(setDirecciones(id, { val, indexPregunta }));\r\n  };\r\n\r\n  const setFormAnswer = val => {\r\n    dispatch(setAnswer(id, val));\r\n  };\r\n\r\n  const convertRes = {\r\n    Correo: \"EM\",\r\n    Celular: \"TC\",\r\n    Twitter: \"TW\"\r\n  };\r\n\r\n  const getIndexOf = respuesta => {\r\n    const res = convertRes[respuesta];\r\n    let dir = null;\r\n    dataPersona.direcciones.forEach(direccion => {\r\n      if (direccion.idrespuesta === res) {\r\n        dir = direccion;\r\n        return;\r\n      }\r\n    });\r\n    return dir;\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let errors = [];\r\n    if (idformulario === \"DIRECCIONES\") {\r\n      data.forEach((pregunta, indexP) => {\r\n        pregunta.respuestas.forEach(respuesta => {\r\n          if (\r\n            respuesta.texto === \"\" &&\r\n            (getIndexOf(respuesta.respuesta) === null ||\r\n              getIndexOf(respuesta.respuesta).texto === \"\")\r\n          ) {\r\n            errors.push(pregunta.idpregunta);\r\n            setFormError([...errors]);\r\n          }\r\n          if (\r\n            getIndexOf(respuesta.respuesta) !== null &&\r\n            getIndexOf(respuesta.respuesta).texto !== \"\"\r\n          ) {\r\n            setInputDirecciones(getIndexOf(respuesta.respuesta).texto, indexP);\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      data.forEach(pregunta => {\r\n        if (Number(pregunta.idrespuesta) === 0) {\r\n          errors.push(pregunta.idpregunta);\r\n          setFormError([...errors]);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!errors.length) {\r\n      setFormError([]);\r\n      submitForm();\r\n    }\r\n  };\r\n\r\n  const submitForm = async () => {\r\n    const postUrl =\r\n      \"https://f2020.azurewebsites.net/api/FaroFormularioPersonaPost?code=rkmGB0kHPzpU/Nxb7L8NT1PAw6jmOxslIH2eXiyjh9vmFIjFRFblAw==\";\r\n\r\n    setIsErrorPost(false);\r\n    setIsLoadingPost(true);\r\n    try {\r\n      const config = {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state.formularios[index])\r\n      };\r\n\r\n      await fetch(postUrl, config);\r\n      setIsErrorPost(false);\r\n      setIsLoadingPost(false);\r\n      setOpen(false);\r\n    } catch (error) {\r\n      setIsErrorPost(true);\r\n      setIsLoadingPost(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {title}\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{message.encabezado}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <FormControl fullWidth component=\"fieldset\">\r\n            <JsonForm\r\n              data={data && data}\r\n              error={isError}\r\n              setFormAnswer={setFormAnswer}\r\n              setInputDirecciones={setInputDirecciones}\r\n              idformulario={idformulario}\r\n              getIndexOf={getIndexOf}\r\n              formError={formError}\r\n            />\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={validateForm} color=\"primary\">\r\n            {isLoadingPost ? \"Enviando...\" : \"Enviar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Formularios = ({ dataPersona, cedula }) => {\r\n  const classes = useStyles();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const url =\r\n    \"https://f2020.azurewebsites.net/api/FaroFormulariosPersona?code=nbjfp6Cn8Mx3/WPr3DCwMXV8EZbfw2CB8UIMOTyfW8TYtlBSsbXGqw==\";\r\n\r\n  const {\r\n    dataPost: data,\r\n    isLoadingPost: isLoading,\r\n    isErrorPost: isError\r\n  } = useFetchPost(url, {\r\n    id: {\r\n      cedula: cedula\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    !isLoading && data && dispatch(setJson(data));\r\n  }, [data, isLoading]);\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.styledFormsContainer}\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      container\r\n      spacing={0}>\r\n      {data && !isLoading ? (\r\n        data.map((formulario, index) => (\r\n          <Grid\r\n            key={formulario.id}\r\n            className={classes.styledFormContainer}\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            lg={3}>\r\n            <Formulario\r\n              index={index}\r\n              state={state}\r\n              isError={isError}\r\n              id={formulario.id}\r\n              idformulario={formulario.idformulario}\r\n              dispatch={dispatch}\r\n              data={formulario.preguntas}\r\n              dataPersona={dataPersona}\r\n              message={formulario.mensaje}\r\n              title={formulario.idformulario}\r\n            />\r\n          </Grid>\r\n        ))\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default Formularios;\r\n","import { SET_JSON, SET_ANSWER, SET_DIRECCIONES } from \"./actionTypes\";\r\n\r\nexport const setJson = payload => ({\r\n  payload,\r\n  type: SET_JSON\r\n});\r\n\r\nexport const setAnswer = (id, payload) => ({\r\n  id,\r\n  payload,\r\n  type: SET_ANSWER\r\n});\r\n\r\nexport const setDirecciones = (id, payload) => ({\r\n  id,\r\n  payload,\r\n  type: SET_DIRECCIONES\r\n});\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = url => {\r\n  const [data, setData] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // Just pass the variables that changes in each new fetch requisition\r\n  const fetchData = async url => {\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      setData(data);\r\n    } catch (error) {\r\n      setIsError(true);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(url);\r\n  }, [url]);\r\n\r\n  return { data, isLoading, isError };\r\n};\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Formularios from \"./components/formularios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { useFetch } from \"./components/hooks/useFetch\";\n\nfunction App() {\n  const href = new URL(window.location.href);\n  const cedula = href.searchParams.get(\"cedula\");\n\n  const url =\n    \"https://openfaroapi.azurewebsites.net/api/personagetv2?idorganizacion=10&identificacion=\";\n\n  const { data, isLoading, isError } = useFetch(url + cedula);\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Navbar data={data} isLoading={isLoading} isError={isError} />\n      <Formularios dataPersona={data} cedula={cedula} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}